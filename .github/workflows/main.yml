name: Main Foodgram workflow

on:
  push:
    branches:
      - main

jobs:
  backend_tests:
    name: Run backend tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image:
          postgres:17.4
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 3235678
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Check code
        run: |
          cd ./backend/
          python -m pip install --upgrade pip
          pip install flake8 --no-cache-dir --quiet
          flake8 . --max-line-length=80
      - name: Install dependencies
        run: pip install -r ./backend/requirements.txt --quiet
      - name: Migrate
        run: python ./backend/manage.py migrate
      - name: Load data
        run: python ./backend/manage.py loaddata ./backend/example_data/ingredients.json
      - name: Start server
        run:
          cd ./backend/
          nohup python manage.py runserver 127.0.0.1:8000 &
      - name: Wait for server to be ready
        run: |
          echo "Waiting for server..."
          sleep 10
          curl --fail http://127.0.0.1:8000/api/ || (echo "Server not responding" && exit 1)
      - name: Install -g newman
        run: npm install -g newman
      - name: Run postman tests
        run: newman run ./postman_collection/foodgram.postman_collection.json --reporters cli

  backend_build_and_push:
    name: Build and push backend image to Docker Hub
    runs-on: ubuntu-latest
    needs: backend_tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

  frontend_build_and_push:
    name: Build and push frontend image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest

  send_message_telegram:
    runs-on: ubuntu-latest
    needs:
      - backend_build_and_push
      - frontend_build_and_push
    steps:
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Образы успешно загружены!